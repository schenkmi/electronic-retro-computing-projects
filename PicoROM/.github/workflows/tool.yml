name: PicoROM Tool CI

on:
  push:
    branches:
      - main
    tags:
      - '*'
    paths:
      - 'host/**'
      - '.github/workflows/tool.yml'

  pull_request:
    paths:
      - 'host/**'
      - '.github/workflows/tool.yml'

  workflow_dispatch:

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always
  GH_TOKEN: '${{ github.token }}'

jobs:
  build:
    name: Build
    strategy:
      matrix:
        include:
          - target: x86_64-apple-darwin
            host: macos-latest
            cross: false
          - target: x86_64-pc-windows-msvc
            host: windows-latest
            cross: false
          - target: aarch64-apple-darwin
            host: macos-latest
            cross: false
          - target: armv7-unknown-linux-musleabihf
            host: ubuntu-latest
            cross: true
          - target: x86_64-unknown-linux-musl
            host: ubuntu-latest
            cross: true
    runs-on: ${{ matrix.host }}
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - run: cargo install cross --git https://github.com/cross-rs/cross
        if: ${{ matrix.cross }}
      - run: cross build --release --target ${{ matrix.target }} --manifest-path host/picorom/Cargo.toml --target-dir target
        if: ${{ matrix.cross }}
      - run: cargo build --release --target ${{ matrix.target }} --manifest-path host/picorom/Cargo.toml --target-dir target
        if: ${{ !matrix.cross }}
      - run: |
          mkdir artifacts
          cp target/${{ matrix.target }}/release/picorom.exe artifacts/picorom-${{ matrix.target }}.exe
          cp target/${{ matrix.target }}/release/picorom.pdb artifacts/picorom-${{ matrix.target }}.pdb
        if: ${{ matrix.host == 'windows-latest' }}
      - run: |
          mkdir artifacts
          cp target/${{ matrix.target }}/release/picorom artifacts/picorom-${{ matrix.target }}
        if: ${{ matrix.host != 'windows-latest' }}
      - uses: actions/upload-artifact@v3
        with:
          name: picorom
          path: artifacts/*
          if-no-files-found: error

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [build]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: picorom
      - name: Attach picorom
        uses: svenstaro/upload-release-action@v2
        with:
          file_glob: true
          file: picorom*

