// The following code was generated by Microsoft Visual Studio 2005.
// The test owner should check each test for validity.
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.Text;
using System.Collections.Generic;
namespace PaytonByrd_ProcessConfigurationTests
{
    /// <summary>
    ///This is a test class for PaytonByrd.ProcessConfiguration.Helpers.ResourceHelper and is intended
    ///to contain all PaytonByrd.ProcessConfiguration.Helpers.ResourceHelper Unit Tests
    ///</summary>
    [TestClass()]
    public class ResourceHelperTest
    {


        private TestContext testContextInstance;

        /// <summary>
        ///Gets or sets the test context which provides
        ///information about and functionality for the current test run.
        ///</summary>
        public TestContext TestContext
        {
            get
            {
                return testContextInstance;
            }
            set
            {
                testContextInstance = value;
            }
        }
        #region Additional test attributes
        // 
        //You can use the following additional attributes as you write your tests:
        //
        //Use ClassInitialize to run code before running the first test in the class
        //
        //[ClassInitialize()]
        //public static void MyClassInitialize(TestContext testContext)
        //{
        //}
        //
        //Use ClassCleanup to run code after all tests in a class have run
        //
        //[ClassCleanup()]
        //public static void MyClassCleanup()
        //{
        //}
        //
        //Use TestInitialize to run code before running each test
        //
        //[TestInitialize()]
        //public void MyTestInitialize()
        //{
        //}
        //
        //Use TestCleanup to run code after each test has run
        //
        //[TestCleanup()]
        //public void MyTestCleanup()
        //{
        //}
        //
        #endregion


        #region GetResourceTest_SunnyDay
        /// <summary>
        ///A test for GetResource (string)
        ///</summary>
        [DeploymentItem("PaytonByrd.ProcessConfiguration.dll")]
        [TestMethod()]
        public void GetResourceTest_SunnyDay()
        {
            string pv_strResourceName = "ERROR_MSG_CANNOT_BE_NULL";

            string expected = "The value of {0} cannot be null.";
            string actual;

            actual = PaytonByrd_ProcessConfigurationTests.PaytonByrd_ProcessConfiguration_Helpers_ResourceHelperAccessor.GetResource(pv_strResourceName);

            Assert.AreEqual(expected, actual,
                "PaytonByrd.ProcessConfiguration.Helpers.ResourceHelper.GetResource did not return the expected value.");
        }
        #endregion GetResourceTest_SunnyDay

        #region GetResourceTest_NullParameter
        /// <summary>
        ///A test for GetResource (string)
        ///</summary>
        [DeploymentItem("PaytonByrd.ProcessConfiguration.dll")]
        [TestMethod()]
        [ExpectedException(typeof(ArgumentNullException))]
        public void GetResourceTest_NullParameter()
        {
            string pv_strResourceName = null;

            PaytonByrd.ProcessConfiguration.Helpers.ResourceHelper.GetResource(pv_strResourceName);
        }
        #endregion GetResourceTest_NullParameter

        #region GetResourceTest_InvalidParameter
        /// <summary>
        ///A test for GetResource (string)
        ///</summary>
        [DeploymentItem("PaytonByrd.ProcessConfiguration.dll")]
        [TestMethod()]
        [ExpectedException(typeof(ArgumentException))]
        public void GetResourceTest_InvalidParameter()
        {
            string pv_strResourceName = string.Empty;

            string expected = "The value of {0} cannot be null.";
            string actual;

            try
            {
                actual = PaytonByrd_ProcessConfigurationTests.PaytonByrd_ProcessConfiguration_Helpers_ResourceHelperAccessor.GetResource(pv_strResourceName);
            }
            catch (System.Reflection.TargetInvocationException objException)
            {
                throw objException.InnerException;
            }

            Assert.AreEqual(expected, actual,
                "PaytonByrd.ProcessConfiguration.Helpers.ResourceHelper.GetResource did not return the expected value.");
        }
        #endregion GetResourceTest_InvalidParameter

    }


}
