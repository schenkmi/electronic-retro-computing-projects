; Copyright 1999 Michael Klein <michael(dot)klein(at)puffin(dot)lb(dot)shuttle(dot)de>
; All rights reserved.
;
; This file is part of OpenCBM
;
; Redistribution and use in source and binary forms, with or without
; modification, are permitted provided that the following conditions are met:
;
;     * Redistributions of source code must retain the above copyright
;       notice, this list of conditions and the following disclaimer.
;     * Redistributions in binary form must reproduce the above copyright
;       notice, this list of conditions and the following disclaimer in
;       the documentation and/or other materials provided with the
;       distribution.
;     * Neither the name of the OpenCBM team nor the names of its
;       contributors may be used to endorse or promote products derived
;       from this software without specific prior written permission.
;
; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
; IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
; TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
; PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
; OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
; EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
; PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
; LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
; NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
; SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;

	port = $1800
	db   = $86

	*=$0680

	jmp init	; init
	jmp chkerr	; trap error
	jmp noerr	; no error

	sta db		; store data byte
	ldx #$04	; loop count (2 bit per loop)
s0	lda #$04	; ATN ack = 1
	lsr db		; LSB into carry
	rol
	asl
	sta port	; ATN ack=1, DATA=x, CLK=0
s1	lda port
	bmi s1		; wait for ATN=0
	lda #$02	; CLK = 1
	lsr db
	rol
	asl
	sta port	; ATN ack=0, DATA=x, CLK=1A
s2	lda port
	bpl s2		; wait for ATN=1
	dex
	bne s0
clk1	lda #$08
	sta $1800
	rts

init	lda #$04	; init
i0	bit port
	bne i0
	asl
	sta port
i1	lda port
	bpl i1
	rts

chkerr  lda port
	bmi *-3
	rts

noerr	lda #$02
	sta port
	jsr i1
	lda #$18
	sta port
	lda #$01
	bit port
	bne *-3
	rts
