#org 0x8000
                LDI 0xfe STA 0xffff ; init stack
                LDI 0x00 STA pos+0 LDI 0x90 STA pos+1
move:           LDR _ParsePtr CPI 32 BCC error BNE wait
                  INW _ParsePtr JPA move
wait:           INP BEQ wait
                  CPI 13 BEQ wait             ; ignore \r
                  CPI 27 BEQ ende
                    STR pos OUT
                    INW pos JPA wait
ende:           LDI 0 STR pos                 ; append a zero
                  LDA _ParsePtr+0 PHS
                  LDA _ParsePtr+1 PHS
                  LDI 0x00 PHS LDI 0x90 PHS
                  LDA pos+0 PHS LDA pos+1 PHS
                  JPS _SaveFile
                  LDI 5 ADB 0xffff
                  PLS CPI 1 BEQ okay
                    LDI 10 OUT JPS _WaitUART
error:          LDI '?' OUT JPS _WaitUART
okay:           LDI 10 OUT JPS _WaitUART
                JPA _Prompt

#end

pos:            0xffff

#org 0xf003     _Prompt:      ; OS entry point for line input prompt
#org 0xf00c     _WaitUART:    ; Waits for UART transmission
#org 0xf012     _SaveFile:    ; Saves data as a file to SSD bank
#org 0xfeb2     _ParsePtr:    ; Zeiger auf das letzte eingelesene Zeichen (to be reset at startup)